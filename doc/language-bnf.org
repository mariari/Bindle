The following is the bnf for bindle defmodule:

#+BEGIN_EXAMPLE
  final := (defmodule <module_name> <mod_term>)
         | (defmodule <module_name> <doc_string> <mod_term>)
         | (defmodule <doc_string> <mod_term>)
         | (defmodule <mod_term>)

  mod_term := <sig>
            | <functor>
            | <module>

  sig := sig <sig_term>*

  sig_term := (val <val_name>)
            | (fun <fun_name> <arguments>*)
            | (macro <macro_name>)
            | (include <module_name>)
            | <valid_symbol>

  functor := (<functor_constraint>*) ()         <definitions>
           | (<functor_constraint>*) (<sig>)    <definitions>
           | (<functor_constraint>*) <sig_name> <definitions>

  functor_constraint := (<module_name> (<sig>))
                      | (<module_name> <sig_name>)

  module := struct () <definitions>
          | struct <sig_name> <definitions>
          | struct (<sig>) <definitions>

  definitions := <valid_lisp>
#+END_EXAMPLE
